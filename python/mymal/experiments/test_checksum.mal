(load-file "experiments/checksum.mal")

(defn assert
  (actual expected test-name)
    (if (not (= expected actual))
      (throw (str test-name " failed! expected " expected " actual " actual))
      (prn (str "Test-case " test-name " passed!"))
    )
)

(def! test-data
  '(
    (5 1 9 5)
    (7 5 3)
    (2 4 6 8)
  )
)

(assert
  (get-checksum test-data 0)
  18
  "test-data"
)

(assert
  (get-checksum '((1 2)) 0)
  1
  "one row"
)

(assert
  (get-checksum '((2 1)) 0)
  1
  "one row inversed"
)

(assert
  (get-checksum '((1)) 0)
  0
  "one item"
)
