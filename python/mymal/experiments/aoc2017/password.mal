;; Advent of code day 4 - check duplicates in a password string

;; Using a map to store if word repeats

(defn password-contains-duplicates
  (words seen-map)
    (if (empty? words)
      false
      (let*
        (
          word (first words)
        )
        (if (contains? seen-map word)
          true
          (password-contains-duplicates (rest words) (assoc seen-map word true))
        )
      )
    )
)

(defn number-of-valid-passwords
  (lst-of-passwords no-valid no-invalid)
    (if (empty? lst-of-passwords)
      [no-valid no-invalid]
      (let*
        (
          next-password (first lst-of-passwords)
          words-in-next-password (split-str next-password)
          rest-of-passwords (rest lst-of-passwords)
        )
        (if (password-contains-duplicates words-in-next-password {})
          (number-of-valid-passwords rest-of-passwords no-valid (+ 1 no-invalid))
          (number-of-valid-passwords rest-of-passwords (+ 1 no-valid) no-invalid)
        )
      )
    )
)

(defn check-passwords
  (lst-of-passwords)
    (number-of-valid-passwords lst-of-passwords 0 0)
)
